type Query {
  getAllPost: [Post]!
  getOnePost(postId: Int): Post!
  getUserPost(userId: Int): [Post]!
}

type Mutation {
  postCreate(post: PostInput!): Post!
  postUpdate(postId: ID!, post: PostUpdateInput!): Post!
  postAddImage(postId: ID!, url: [AddImage]!): [PostImage!]
  postDeleteImage(postId: ID!, imageId: [Int]!): String!
  postDelete(postId: ID!): String!
  commentDelete(postId: ID!, commentId: ID!): String!
  commentCreate(userId: ID!, postId: ID!, comment: String!): Comment!
}

#Comment Update
# Delete Post
# Delete COmment

input AddImage {
  url: String!
}

input PostInput {
  title: String!
  content: String!
  isPublic: Boolean!
  PostImage: [String]
}

input PostUpdateInput {
  title: String
  content: String
  isPublic: Boolean
}

type Error {
  message: String!
}

type Post {
  id: ID!
  title: String!
  content: String!
  createdAt: String
  updatedAt: String
  isPublic: Boolean!
  images: [PostImage]
  profile: Profile!
  comments: [Comment]
}

type Comment {
  id: ID!
  content: String
  createdAt: String
  updatedAt: String
  user: Profile
  post: Post
  userId: Int
}

type PostImage {
  id: ID
  url: String!
  postId: ID
}
